<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="utf-8">
	<meta name="viewport" content="width=500">
	<title>UI设置</title>
	<script>
		var d = document;
		var initial_ds, initial_st;
		var sett = null;
		var l = {
			"comp":{
			"labels":"Show button labels",
			"colors":{
				"LABEL":"Color selection methods",
				"picker": "Color Wheel",
				"rgb": "RGB sliders",
				"quick": "Quick color selectors",
				"hex": "HEX color input"
			},
      "pcmbot": "Show bottom tab bar in PC mode",
      "pid": "Show preset IDs"
			},
			"theme":{
				"alpha": {
					"bg":"Background opacity",
					"tab":"Button opacity"
				},
				"bg":{
					"url":"BG image URL",
					"random":"Random BG image"
				},
				"color":{
					"bg":"BG HEX color"
				}
			}
			
		};
		function gId(s)
		{
			return d.getElementById(s);
		}
		function isObject(item) {
			return (item && typeof item === 'object' && !Array.isArray(item));
		}
		function set(path, obj, val) {
			var tar = obj;
			var pList = path.split('_');
			var len = pList.length;
			for(var i = 0; i < len-1; i++) {
				var elem = pList[i];
				if( !tar[elem] ) tar[elem] = {}
				tar = tar[elem];
			}

			tar[pList[len-1]] = val;
		}

		function addRec(s, path = "", label = null)
		{
			var str = "";
			for (i in s)
			{
				var fk = path + (path?'_':'') + i;
				if (isObject(s[i])) {
					if (label && label[i] && label[i]["LABEL"]) str += `<h3>${label[i]["LABEL"]}</h3>`;
					str += addRec(s[i], fk, label? label[i] : null);
				} else {
					var lb = fk;
					if (label && label[i]) lb = label[i];
					else if (s[i+'LABEL']) lb = s[i+'LABEL'];
					if (i.indexOf('LABEL') > 0) continue;
					var t = typeof s[i];
					if (gId(fk)) { //already exists
						if(t === 'boolean')
						{
							gId(fk).checked = s[i];
						} else {
							gId(fk).value = s[i];
						}
						if (gId(fk).previousElementSibling.matches('.l')) {
							gId(fk).previousElementSibling.innerHTML = lb;
						}
					} else {
						if(t === 'boolean')
						{
							str += `${lb}: <input class="agi cb" type="checkbox" id=${fk} ${s[i]?"checked":""}><br>`;
						} else if (t === 'number')
						{
							str += `${lb}: <input class="agi" type="number" id=${fk} value=${s[i]}><br>`;
						} else if (t === 'string')
						{
							str += `${lb}:<br><input class="agi" id=${fk} value=${s[i]}><br>`;
						}
					}
				}
			}
			return str;
		}

		function genForm(s) {
			var str = "";
			str = addRec(s,"",l);
			
			gId('gen').innerHTML = str;
		}
		function GetLS()
		{
			sett = localStorage.getItem('wledUiCfg');
			if (!sett) gId('lserr').style.display = "inline";
			try {
				sett = JSON.parse(sett);
			} catch (e) {
				sett = {};
				gId('lserr').style.display = "inline";
				gId('lserr').innerHTML = "&#9888; Settings JSON parsing failed. (" + e + ")";
			}
			genForm(sett);
			gId('dm').checked = (gId('theme_base').value === 'light');
		}
	
		function SetLS()
		{
			var l = d.querySelectorAll('.agi');
			for (var i = 0; i < l.length; i++) {
				var e = l[i];
				var val = e.classList.contains('cb') ? e.checked : e.value;
				set(e.id, sett, val);
				console.log(`${e.id} set to ${val}`);
			}
			try {
				localStorage.setItem('wledUiCfg', JSON.stringify(sett));
				gId('lssuc').style.display = "inline";
			} catch (e) {
				gId('lssuc').style.display = "none";
				gId('lserr').style.display = "inline";
				gId('lserr').innerHTML = "&#9888; Settings JSON saving failed. (" + e + ")";
			}
		}
		
		function Save() {
			SetLS();
			if (d.Sf.DS.value != initial_ds || d.Sf.ST.checked != initial_st) d.Sf.submit();
		}
		
		function S()
		{
			GetV(); 
			initial_ds = d.Sf.DS.value;
			initial_st = d.Sf.ST.checked;
			GetLS();
		}
		function H()
		{
			window.open("https://github.com/Aircoookie/WLED/wiki/Settings#user-interface-settings");
		}
		function B()
		{
			window.open("/settings","_self");
		}
		function UI()
		{
			gId('idonthateyou').style.display = (gId('dm').checked) ? 'inline':'none';
			var f = gId('theme_base');
			if (f) f.value = (gId('dm').checked) ? 'light':'dark';
		}

		// random BG image
		function setRandomBg() {
			if (gId("theme_bg_random").checked) {
				gId("theme_bg_url").value = "https://picsum.photos/1920/1080";
			} else {
				gId("theme_bg_url").value = "";
			}
			
		}
		function checkRandomBg() {
			if (gId("theme_bg_url").value === "https://picsum.photos/1920/1080") {
				gId("theme_bg_random").checked = true;
			} else {
				gId("theme_bg_random").checked = false;
			}
		}

		function GetV(){var d=document;}
	</script>
	<style>
		@import url("style.css");
	</style>
</head>
<body onload="S()">
	<form id="form_s" name="Sf" method="post">
		<div style="position:sticky;top:0;background-color:#222;">
		<div class="helpB"><button type="button" onclick="H()">?</button></div>
		<button type="button" onclick="B()">返回</button><button type="button" onclick="Save()">保存</button><br>
		<span id="lssuc" style="color:green; display:none">&#10004; 本地UI设置已保存！</span>
		<span id="lserr" style="color:red; display:none">&#9888; 无法访问本地存储。确保在浏览器中已启用。</span><hr>
		</div>
		<h2>Web设置</h2>
		服务器描述： <input name="DS" maxlength="32"><br>
    同步按钮切换发送和接收： <input type="checkbox" name="ST"><br>
		<i>以下UI自定义设置对于WLED设备和此浏览器都是唯一的。<br>
		如果使用不同的浏览器、设备或WLED IP地址，则需要重新设置它们<br>
		刷新主UI以应用更改。</i><br>
		
		<div id="gen">正在加载设置... ...</div>
		
		<h3>UI外观</h3>
		<span class="l"></span>: <input type="checkbox" id="comp_labels" class="agi cb"><br>
    <span class="l"></span>: <input type="checkbox" id="comp_pcmbot" class="agi cb"><br>
    <span class="l"></span>: <input type="checkbox" id="comp_pid" class="agi cb"><br>
		我不喜欢黑黑的 <input type="checkbox" id="dm" onchange="UI()"><br>
		<span id="idonthateyou" style="display:none"><i>为啥？点解？ </i>&#x1F97A;<br></span>
		<span class="l"></span>: <input type="number" min=0.0 max=1.0 step=0.01 id="theme_alpha_tab" class="agi"><br>
		<span class="l"></span>: <input type="number" min=0.0 max=1.0 step=0.01 id="theme_alpha_bg" class="agi"><br>
		<span class="l"></span>: <input id="theme_color_bg" maxlength="9" class="agi"><br>
		<span class="l">背景图 URL</span>: <input id="theme_bg_url" class="agi" oninput="checkRandomBg()"><br>
		<span class="l">随机背景图</span>: <input type="checkbox" id="theme_bg_random" class="agi cb" onchange="setRandomBg()"><br>
		<input id="theme_base" class="agi" style="display:none">
		<hr><button type="button" onclick="B()">返回</button><button type="button" onclick="Save()">保存</button>
	</form>
</body>
</html>